---
import { Icon } from "astro-icon";
import { Picture } from "@astrojs/image/components";

interface CallToAction {
  text: string;
  href: string;
  icon?: string;
}

export interface Props {
  title?: string;
  subtitle?: string;
  content?: string;
  callToAction?: string | CallToAction;
  callToAction2?: string | CallToAction;
  image?: string | any; // TODO: find HTMLElementProps
}

const {
  title = await Astro.slots.render("title"),
  subtitle = await Astro.slots.render("subtitle"),
  content = await Astro.slots.render("content"),
  callToAction = await Astro.slots.render("callToAction"),
  callToAction2 = await Astro.slots.render("callToAction2"),
  image = await Astro.slots.render("image"),
} = Astro.props;
---

<section class="h-300 md:h-screen md:-mt-20 xl:-mt-20 bg-cover bg-center mb-16">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 md:pt-20">
    <div class="pt-0 md:pt-[76px] pointer-events-none"></div>
    <div class="relative pt-12">
      <Picture
        class="hidden absolute top-0 right-0 rounded-xl"
        width={600}
        height={500}
        widths={[400, 768]}
        sizes="100vw, 432px"
        aspectRatio="400:300"
        alt="sa"
        src={"/images/hero.png"}
      />
      <div
        class="flex flex-col justify-start items-start text-left pb-10 md:pb-16 max-w-screen-xl mx-auto"
      >
        {
          title && (
            <h1
              class="cover-title text-5xl md:text-7xl font-bold leading-tighter tracking-tighter mb-4 font-heading"
              set:html={title}
            />
          )
        }
        <div class="max-w-7xl">
          {
            subtitle && (
              <p
                class="cover-sub-title text-3xl  leading-10  md:text-7xl  mb-6  "
                set:html={subtitle}
              />
            )
          }
          <div
            class="max-w-xs sm:max-w-md flex items-center justify-start gap-4"
          >
            {
              callToAction && (
                <div class="flex">
                  {typeof callToAction === "string" ? (
                    <Fragment set:html={callToAction} />
                  ) : (
                    <a
                      class="cta-button-lg text-lg md:text-2xl mt-8 "
                      href={callToAction?.href}
                      target="_blank"
                      rel="noopener"
                    >
                      {callToAction?.text}
                    </a>
                  )}
                </div>
              )
            }
          </div>
        </div>
        {content && <Fragment set:html={content} />}
      </div>
    </div>
  </div>
</section>
