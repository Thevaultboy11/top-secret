---
import { Icon } from 'astro-icon';
import Logo from '~/components/Logo.astro';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';

import { getHomePermalink, getAsset } from '~/utils/permalinks';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends Link {
  type?: string;
}

interface MenuLink extends Link {
  links?: Array<Link>;
}

export interface Props {
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  links = [],
  actions = [],
  isSticky = false,
  showToggleTheme = false,
  showRssFeed = false,
  position = 'center',
} = Astro.props;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky },
    'top-0 md:pt-4  md:px-12 z-40 flex-none mx-auto w-full bg-transparent   transition-all ease-in duration-100 not-prose',
  ]}
  id="header"
>
  <div class="w-full rounded-full">
    <div
      class="px-4 md:px-4 mx-auto w-full md:flex md:justify-between max-w-7xl bg-paper md:rounded-full navbar shadow-2xl bg-opacity-100 md:bg-opacity-80"
    >
      <div class:list={[{ 'mr-auto': position === 'right' }, 'flex justify-between md:mr-0']}>
        <a class="flex items-center" href={getHomePermalink()}>
          <Logo />
        </a>
        <div class="flex items-center md:hidden">
          <a class="btn btn-primary py-2.5 w-full font-semibold shadow-none text-sm md:hidden" href="/book-a-meeting"
            >Experience Hybrid
          </a>
          <ToggleMenu />
        </div>
      </div>
      <nav
        class="z-10 items-center w-full md:w-auto hidden md:flex h-[calc(100vh-72px)] md:h-auto overflow-y-auto md:overflow-visible md:mx-5"
        aria-label="Main navigation"
      >
        <ul class="flex flex-col pt-8 md:pt-0 md:flex-row md:self-center w-full md:w-auto text-xl md:text-base">
          {
            links.map(({ text, href, links }) => (
              <>
                <li class={links?.length ? 'dropdown' : ''}>
                  {links?.length ? (
                    <>
                      <ul class="dropdown-menu md:backdrop-blur-md  rounded md:absolute bg-transparent  pl-4 md:pl-0 md:hidden font-medium  md:min-w-[200px]">
                        {links.map(({ text: text2, href: href2 }) => (
                          <li>
                            <a
                              class="first:rounded-t last:rounded-b md:hover:bg-primary  py-2 px-5 block whitespace-no-wrap"
                              href={href2}
                            >
                              {text2}
                            </a>
                          </li>
                        ))}
                      </ul>
                    </>
                  ) : (
                    <a class="font-medium px-2 py-3 flex items-center transition duration-150 ease-in-out" href={href}>
                      {text}
                    </a>
                  )}
                </li>
              </>
            ))
          }

          <div class="absolute flex items-justify-center bottom-32 w-11/12"></div>
        </ul>
      </nav>
      <div class:list={[{ 'ml-auto': position === 'left' }, 'md:self-center flex items-center md:mb-0']}>
        <div class="hidden items-center md:flex">
          {
            actions?.length ? (
              <span class="ml-4">
                {actions.map(({ text, href, type }) => (
                  <a class="cta-button-xsm" href={href}>
                    <Fragment set:html={text} />
                  </a>
                ))}
              </span>
            ) : (
              ''
            )
          }
        </div>
      </div>
    </div>
  </div>
</header>
